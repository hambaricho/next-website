@import "tailwindcss";

@font-face {
  font-family: "PPEditorialNew-Regular";
  src: url("/fonts/PPEditorialNew-Regular-BF644b214ff145f.otf")
    format("opentype");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "PPEditorialNew-Ultrabold";
  src: url("/fonts/PPEditorialNew-Ultrabold-BF644b21500840c.otf")
    format("opentype");
  font-weight: 800;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "PPEditorialNew-Italic";
  src: url("/fonts/PPEditorialNew-Italic-BF644b214fb0c0a.otf")
    format("opentype");
  font-weight: 400;
  font-style: italic;
  font-display: swap;
}
@font-face {
  font-family: "PPEditorialNew-Ultralight";
  src: url("/fonts/PPEditorialNew-Ultralight-BF644b21500d0c0.otf")
    format("opentype");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "SuisseIntl-Light";
  src: url("/fonts/Suisse/fonnts.com-SuisseIntl-Light.ttf") format("truetype");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SuisseIntl-Bold";
  src: url("/fonts/Suisse/fonnts.com-Suisse_Intl_Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SuisseIntl-Book";
  src: url("/fonts/Suisse/fonnts.com-Suisse_Intl_Book.ttf") format("truetype");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SuisseIntl-Medium";
  src: url("/fonts/Suisse/fonnts.com-Suisse_Intl_Medium.ttf") format("truetype");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SuisseIntl-Mono";
  src: url("/fonts/Suisse/fonnts.com-Suisse_Intl_Mono.ttf") format("truetype");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SuisseIntl-Regular";
  src: url("/fonts/Suisse/fonnts.com-Suisse_Intl_Regular.ttf")
    format("truetype");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme {
  --color-primary: #94c35f;
  --color-secondary: #232321;
  --color-greenSecondary: #077551;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

::-webkit-scrollbar {
  display: none;
}

.clip {
  clip-path: "polygon(50% 0%, 100% 0, 100% 85%, 90% 100%, 50% 100%, 0 100%, 0 0)";
}

.thumb {
  mask-image: linear-gradient(to bottom, #000, #000),
    linear-gradient(to bottom, #000, #000),
    linear-gradient(to bottom, #000, #000),
    linear-gradient(to bottom, #000, #000),
    linear-gradient(to bottom, #000, #000);
  mask-size: 18% 70%;
  mask-position: 0 100%, 25% 25%, 50% 50%, 75% 0, 100% 50%;
  mask-repeat: no-repeat;
}

.inverted-radius-top-left {
  --r: 50px; /* the radius */
  --s: 60px; /* size of inner curve */
  --x: 150px; /* horizontal offset (no percentane) */
  --y: 40px; /* vertical offset (no percentage) */

  background: #3fb8af;
  border-radius: var(--r);
  --_m: /calc(2 * var(--r)) calc(2 * var(--r)) radial-gradient(#000 70%, #0000
        72%);
  --_g: conic-gradient(at var(--r) var(--r), #000 75%, #0000 0);
  --_d: (var(--s) + var(--r));
  mask: calc(var(--_d) + var(--x)) 0 var(--_m),
    0 calc(var(--_d) + var(--y)) var(--_m),
    radial-gradient(var(--s) at 0 0, #0000 99%, #000 calc(100% + 1px))
      calc(var(--r) + var(--x)) calc(var(--r) + var(--y)),
    var(--_g) calc(var(--_d) + var(--x)) 0,
    var(--_g) 0 calc(var(--_d) + var(--y));
  mask-repeat: no-repeat;
}

.inverted-radius-top-left-small {
  --r: 50px; /* the radius */
  --s: 60px; /* size of inner curve */
  --x: 150px; /* horizontal offset (no percentane) */
  --y: 40px; /* vertical offset (no percentage) */

  background: #3fb8af;
  border-radius: var(--r);
  --_m: /calc(2 * var(--r)) calc(2 * var(--r)) radial-gradient(#000 70%, #0000
        72%);
  --_g: conic-gradient(at var(--r) var(--r), #000 75%, #0000 0);
  --_d: (var(--s) + var(--r));
  mask: calc(var(--_d) + var(--x)) 0 var(--_m),
    0 calc(var(--_d) + var(--y)) var(--_m),
    radial-gradient(var(--s) at 0 0, #0000 99%, #000 calc(100% + 1px))
      calc(var(--r) + var(--x)) calc(var(--r) + var(--y)),
    var(--_g) calc(var(--_d) + var(--x)) 0,
    var(--_g) 0 calc(var(--_d) + var(--y));
  mask-repeat: no-repeat;
}

.inverted-radius-bottom-right {
  --r: 50px; /* the radius */
  --s: 60px; /* size of inner curve */
  --x: 150px; /* horizontal offset (no percentane) */
  --y: 40px; /* vertical offset (no percentage) */

  border-radius: var(--r);
  --_m: /calc(2 * var(--r)) calc(2 * var(--r)) radial-gradient(#000 70%, #0000
        72%);
  --_g: conic-gradient(
    from 90deg at calc(100% - var(--r)) calc(100% - var(--r)),
    #0000 25%,
    #000 0
  );
  --_d: (var(--s) + var(--r));
  mask: calc(100% - var(--_d) - var(--x)) 100% var(--_m),
    100% calc(100% - var(--_d) - var(--y)) var(--_m),
    radial-gradient(var(--s) at 100% 100%, #0000 99%, #000 calc(100% + 1px))
      calc(-1 * var(--r) - var(--x)) calc(-1 * var(--r) - var(--y)),
    var(--_g) calc(-1 * var(--_d) - var(--x)) 0,
    var(--_g) 0 calc(-1 * var(--_d) - var(--y));
  mask-repeat: no-repeat;
}

.inverted-radius-bottom-right-small {
  --r: 20px; /* the radius */
  --s: 30px; /* size of inner curve */
  --x: 20px; /* horizontal offset (no percentane) */
  --y: 10px; /* vertical offset (no percentage) */

  border-radius: var(--r);
  --_m: /calc(2 * var(--r)) calc(2 * var(--r)) radial-gradient(#000 70%, #0000
        72%);
  --_g: conic-gradient(
    from 90deg at calc(100% - var(--r)) calc(100% - var(--r)),
    #0000 25%,
    #000 0
  );
  --_d: (var(--s) + var(--r));
  mask: calc(100% - var(--_d) - var(--x)) 100% var(--_m),
    100% calc(100% - var(--_d) - var(--y)) var(--_m),
    radial-gradient(var(--s) at 100% 100%, #0000 99%, #000 calc(100% + 1px))
      calc(-1 * var(--r) - var(--x)) calc(-1 * var(--r) - var(--y)),
    var(--_g) calc(-1 * var(--_d) - var(--x)) 0,
    var(--_g) 0 calc(-1 * var(--_d) - var(--y));
  mask-repeat: no-repeat;
}

.circle-cut {
  --r: 30px;
  mask: radial-gradient(var(--r) at var(--r), #0000 calc(100% - 1px), #000)
    calc(-1 * var(--r));
}
